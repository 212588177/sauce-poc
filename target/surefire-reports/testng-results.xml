<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="30" passed="29" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-04-19T23:51:20Z" name="Command line suite" finished-at="2020-04-19T23:52:13Z" duration-ms="52415">
    <groups>
    </groups>
    <test started-at="2020-04-19T23:51:20Z" name="Command line test" finished-at="2020-04-19T23:52:13Z" duration-ms="52415">
      <class name="com.yourcompany.Tests.FollowLinkTest">
        <test-method signature="verifyContactLinkTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.FollowLinkTest@1f554b06]" started-at="2020-04-19T19:51:20Z" name="verifyContactLinkTest" data-provider="hardCodedBrowsers" finished-at="2020-04-19T19:51:47Z" duration-ms="26466" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[latest]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.Tests.FollowLinkTest.verifyContactLinkTest(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.net.MalformedURLException,org.openqa.selenium.InvalidElementStateException,java.rmi.UnexpectedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyContactLinkTest -->
        <test-method signature="verifyContactLinkTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.FollowLinkTest@1f554b06]" started-at="2020-04-19T19:51:20Z" name="verifyContactLinkTest" data-provider="hardCodedBrowsers" finished-at="2020-04-19T19:51:39Z" duration-ms="18839" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[latest-1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[macOS 10.15]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.Tests.FollowLinkTest.verifyContactLinkTest(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.net.MalformedURLException,org.openqa.selenium.InvalidElementStateException,java.rmi.UnexpectedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyContactLinkTest -->
        <test-method signature="verifyContactLinkTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.FollowLinkTest@1f554b06]" started-at="2020-04-19T19:51:20Z" name="verifyContactLinkTest" data-provider="hardCodedBrowsers" finished-at="2020-04-19T19:51:39Z" duration-ms="18968" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[MicrosoftEdge]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[latest-1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.Tests.FollowLinkTest.verifyContactLinkTest(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.net.MalformedURLException,org.openqa.selenium.InvalidElementStateException,java.rmi.UnexpectedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyContactLinkTest -->
        <test-method signature="verifyContactLinkTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.FollowLinkTest@1f554b06]" started-at="2020-04-19T19:51:20Z" name="verifyContactLinkTest" data-provider="hardCodedBrowsers" finished-at="2020-04-19T19:51:41Z" duration-ms="20939" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[latest-1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.Tests.FollowLinkTest.verifyContactLinkTest(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.net.MalformedURLException,org.openqa.selenium.InvalidElementStateException,java.rmi.UnexpectedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyContactLinkTest -->
        <test-method signature="verifyContactLinkTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.FollowLinkTest@1f554b06]" started-at="2020-04-19T19:51:20Z" name="verifyContactLinkTest" data-provider="hardCodedBrowsers" finished-at="2020-04-19T19:51:39Z" duration-ms="18388" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[latest]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.Tests.FollowLinkTest.verifyContactLinkTest(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.net.MalformedURLException,org.openqa.selenium.InvalidElementStateException,java.rmi.UnexpectedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyContactLinkTest -->
        <test-method signature="verifyContactLinkTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.FollowLinkTest@1f554b06]" started-at="2020-04-19T19:51:20Z" name="verifyContactLinkTest" data-provider="hardCodedBrowsers" finished-at="2020-04-19T19:51:46Z" duration-ms="25178" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[latest-1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.Tests.FollowLinkTest.verifyContactLinkTest(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.net.MalformedURLException,org.openqa.selenium.InvalidElementStateException,java.rmi.UnexpectedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyContactLinkTest -->
        <test-method signature="verifyContactLinkTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.FollowLinkTest@1f554b06]" started-at="2020-04-19T19:51:20Z" name="verifyContactLinkTest" data-provider="hardCodedBrowsers" finished-at="2020-04-19T19:51:40Z" duration-ms="19203" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[latest]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[macOS 10.15]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.Tests.FollowLinkTest.verifyContactLinkTest(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.net.MalformedURLException,org.openqa.selenium.InvalidElementStateException,java.rmi.UnexpectedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyContactLinkTest -->
        <test-method signature="verifyContactLinkTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.FollowLinkTest@1f554b06]" started-at="2020-04-19T19:51:20Z" name="verifyContactLinkTest" data-provider="hardCodedBrowsers" finished-at="2020-04-19T19:51:40Z" duration-ms="19714" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[MicrosoftEdge]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[latest]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.Tests.FollowLinkTest.verifyContactLinkTest(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.net.MalformedURLException,org.openqa.selenium.InvalidElementStateException,java.rmi.UnexpectedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyContactLinkTest -->
        <test-method signature="verifyContactLinkTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.FollowLinkTest@1f554b06]" started-at="2020-04-19T19:51:20Z" name="verifyContactLinkTest" data-provider="hardCodedBrowsers" finished-at="2020-04-19T19:51:44Z" duration-ms="23181" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[latest-1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[macOS 10.15]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.Tests.FollowLinkTest.verifyContactLinkTest(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.net.MalformedURLException,org.openqa.selenium.InvalidElementStateException,java.rmi.UnexpectedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyContactLinkTest -->
        <test-method signature="verifyContactLinkTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.FollowLinkTest@1f554b06]" started-at="2020-04-19T19:51:20Z" name="verifyContactLinkTest" data-provider="hardCodedBrowsers" finished-at="2020-04-19T19:51:41Z" duration-ms="20439" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[latest]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[macOS 10.15]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.Tests.FollowLinkTest.verifyContactLinkTest(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.net.MalformedURLException,org.openqa.selenium.InvalidElementStateException,java.rmi.UnexpectedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyContactLinkTest -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.Tests.FollowLinkTest@1f554b06]" started-at="2020-04-19T19:51:39Z" name="tearDown" finished-at="2020-04-19T19:51:39Z" duration-ms="386" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyContactLinkTest status=SUCCESS method=FollowLinkTest.verifyContactLinkTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.FollowLinkTest@1f554b06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.Tests.FollowLinkTest@1f554b06]" started-at="2020-04-19T19:51:39Z" name="tearDown" finished-at="2020-04-19T19:51:40Z" duration-ms="510" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyContactLinkTest status=SUCCESS method=FollowLinkTest.verifyContactLinkTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.FollowLinkTest@1f554b06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.Tests.FollowLinkTest@1f554b06]" started-at="2020-04-19T19:51:39Z" name="tearDown" finished-at="2020-04-19T19:51:40Z" duration-ms="356" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyContactLinkTest status=SUCCESS method=FollowLinkTest.verifyContactLinkTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.FollowLinkTest@1f554b06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.Tests.FollowLinkTest@1f554b06]" started-at="2020-04-19T19:51:40Z" name="tearDown" finished-at="2020-04-19T19:51:40Z" duration-ms="551" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyContactLinkTest status=SUCCESS method=FollowLinkTest.verifyContactLinkTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.FollowLinkTest@1f554b06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.Tests.FollowLinkTest@1f554b06]" started-at="2020-04-19T19:51:40Z" name="tearDown" finished-at="2020-04-19T19:51:41Z" duration-ms="494" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyContactLinkTest status=SUCCESS method=FollowLinkTest.verifyContactLinkTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.FollowLinkTest@1f554b06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.Tests.FollowLinkTest@1f554b06]" started-at="2020-04-19T19:51:41Z" name="tearDown" finished-at="2020-04-19T19:51:41Z" duration-ms="427" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyContactLinkTest status=SUCCESS method=FollowLinkTest.verifyContactLinkTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.FollowLinkTest@1f554b06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.Tests.FollowLinkTest@1f554b06]" started-at="2020-04-19T19:51:41Z" name="tearDown" finished-at="2020-04-19T19:51:42Z" duration-ms="413" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyContactLinkTest status=SUCCESS method=FollowLinkTest.verifyContactLinkTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.FollowLinkTest@1f554b06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.Tests.FollowLinkTest@1f554b06]" started-at="2020-04-19T19:51:44Z" name="tearDown" finished-at="2020-04-19T19:51:45Z" duration-ms="1468" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyContactLinkTest status=SUCCESS method=FollowLinkTest.verifyContactLinkTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.FollowLinkTest@1f554b06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.Tests.FollowLinkTest@1f554b06]" started-at="2020-04-19T19:51:46Z" name="tearDown" finished-at="2020-04-19T19:51:46Z" duration-ms="504" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyContactLinkTest status=SUCCESS method=FollowLinkTest.verifyContactLinkTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.FollowLinkTest@1f554b06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.Tests.FollowLinkTest@1f554b06]" started-at="2020-04-19T19:51:47Z" name="tearDown" finished-at="2020-04-19T19:51:48Z" duration-ms="813" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyContactLinkTest status=SUCCESS method=FollowLinkTest.verifyContactLinkTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.FollowLinkTest@1f554b06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.yourcompany.Tests.FollowLinkTest -->
      <class name="com.yourcompany.Tests.ContactFormTest">
        <test-method signature="contactFormTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.ContactFormTest@694e1548]" started-at="2020-04-19T19:51:20Z" name="contactFormTest" data-provider="hardCodedBrowsers" finished-at="2020-04-19T19:51:53Z" duration-ms="32669" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[latest]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.Tests.ContactFormTest.contactFormTest(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.net.MalformedURLException,org.openqa.selenium.InvalidElementStateException,java.rmi.UnexpectedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- contactFormTest -->
        <test-method signature="contactFormTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.ContactFormTest@694e1548]" started-at="2020-04-19T19:51:20Z" name="contactFormTest" data-provider="hardCodedBrowsers" finished-at="2020-04-19T19:52:08Z" duration-ms="47215" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[latest]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[macOS 10.15]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.Tests.ContactFormTest.contactFormTest(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.net.MalformedURLException,org.openqa.selenium.InvalidElementStateException,java.rmi.UnexpectedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- contactFormTest -->
        <test-method signature="contactFormTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.ContactFormTest@694e1548]" started-at="2020-04-19T19:51:20Z" name="contactFormTest" data-provider="hardCodedBrowsers" finished-at="2020-04-19T19:52:01Z" duration-ms="40960" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[latest-1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.Tests.ContactFormTest.contactFormTest(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.net.MalformedURLException,org.openqa.selenium.InvalidElementStateException,java.rmi.UnexpectedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- contactFormTest -->
        <test-method signature="contactFormTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.ContactFormTest@694e1548]" started-at="2020-04-19T19:51:20Z" name="contactFormTest" data-provider="hardCodedBrowsers" finished-at="2020-04-19T19:51:53Z" duration-ms="33080" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[MicrosoftEdge]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[latest]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.Tests.ContactFormTest.contactFormTest(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.net.MalformedURLException,org.openqa.selenium.InvalidElementStateException,java.rmi.UnexpectedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- contactFormTest -->
        <test-method signature="contactFormTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.ContactFormTest@694e1548]" started-at="2020-04-19T19:51:20Z" name="contactFormTest" data-provider="hardCodedBrowsers" finished-at="2020-04-19T19:52:04Z" duration-ms="43751" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[latest]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[macOS 10.15]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.Tests.ContactFormTest.contactFormTest(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.net.MalformedURLException,org.openqa.selenium.InvalidElementStateException,java.rmi.UnexpectedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- contactFormTest -->
        <test-method signature="contactFormTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.ContactFormTest@694e1548]" started-at="2020-04-19T19:51:20Z" name="contactFormTest" data-provider="hardCodedBrowsers" finished-at="2020-04-19T19:51:54Z" duration-ms="33667" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[MicrosoftEdge]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[latest-1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.Tests.ContactFormTest.contactFormTest(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.net.MalformedURLException,org.openqa.selenium.InvalidElementStateException,java.rmi.UnexpectedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- contactFormTest -->
        <test-method signature="contactFormTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.ContactFormTest@694e1548]" started-at="2020-04-19T19:51:20Z" name="contactFormTest" data-provider="hardCodedBrowsers" finished-at="2020-04-19T19:51:53Z" duration-ms="33057" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[latest-1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[macOS 10.15]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.Tests.ContactFormTest.contactFormTest(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.net.MalformedURLException,org.openqa.selenium.InvalidElementStateException,java.rmi.UnexpectedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- contactFormTest -->
        <test-method signature="contactFormTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.ContactFormTest@694e1548]" started-at="2020-04-19T19:51:20Z" name="contactFormTest" data-provider="hardCodedBrowsers" finished-at="2020-04-19T19:52:03Z" duration-ms="43172" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[latest-1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.Tests.ContactFormTest.contactFormTest(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.net.MalformedURLException,org.openqa.selenium.InvalidElementStateException,java.rmi.UnexpectedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- contactFormTest -->
        <test-method signature="contactFormTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.ContactFormTest@694e1548]" started-at="2020-04-19T19:51:20Z" name="contactFormTest" data-provider="hardCodedBrowsers" finished-at="2020-04-19T19:52:12Z" duration-ms="51975" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[latest]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.Tests.ContactFormTest.contactFormTest(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.net.MalformedURLException,org.openqa.selenium.InvalidElementStateException,java.rmi.UnexpectedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- contactFormTest -->
        <test-method signature="contactFormTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.ContactFormTest@694e1548]" started-at="2020-04-19T19:51:20Z" name="contactFormTest" data-provider="hardCodedBrowsers" finished-at="2020-04-19T19:51:58Z" duration-ms="37594" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[latest-1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[macOS 10.15]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.Tests.ContactFormTest.contactFormTest(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.net.MalformedURLException,org.openqa.selenium.InvalidElementStateException,java.rmi.UnexpectedException]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[Failed to convert data to an object
Build info: version: '3.4.0', revision: 'unknown', time: 'unknown'
System info: host: 'itako2007.prod.miso', ip: 'fe80:0:0:0:1c26:12dd:b30:768c%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.15.1', java.version: '13.0.1'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Capabilities [{moz:profile=/var/folders/xn/1n40nzm97kgdz3pgw7hwy_1w0000kr/T/rust_mozprofile.La3HgDEdZL1j, rotatable=false, moz:geckodriverVersion=0.24.0, timeouts={implicit=0.0, pageLoad=300000.0, script=30000.0}, pageLoadStrategy=normal, unhandledPromptBehavior=dismiss and notify, strictFileInteractability=false, moz:headless=false, platform=ANY, moz:accessibilityChecks=false, moz:useNonSpecCompliantPointerOrigin=false, acceptInsecureCerts=false, browserVersion=74.0, moz:shutdownTimeout=60000.0, platformVersion=19.0.0, moz:processID=4221.0, browserName=firefox, moz:buildID=20200309095159, javascriptEnabled=true, platformName=mac, setWindowRect=true, moz:webdriverClick=true}]
Session ID: XXXXXXXX-XXXX-XXXX-XXXX-XXXX16986c4b
*** Element info: {Using=id, value=Title}
Command duration or timeout: 0 milliseconds]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: Failed to convert data to an object
Build info: version: '3.4.0', revision: 'unknown', time: 'unknown'
System info: host: 'itako2007.prod.miso', ip: 'fe80:0:0:0:1c26:12dd:b30:768c%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.15.1', java.version: '13.0.1'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Capabilities [{moz:profile=/var/folders/xn/1n40nzm97kgdz3pgw7hwy_1w0000kr/T/rust_mozprofile.La3HgDEdZL1j, rotatable=false, moz:geckodriverVersion=0.24.0, timeouts={implicit=0.0, pageLoad=300000.0, script=30000.0}, pageLoadStrategy=normal, unhandledPromptBehavior=dismiss and notify, strictFileInteractability=false, moz:headless=false, platform=ANY, moz:accessibilityChecks=false, moz:useNonSpecCompliantPointerOrigin=false, acceptInsecureCerts=false, browserVersion=74.0, moz:shutdownTimeout=60000.0, platformVersion=19.0.0, moz:processID=4221.0, browserName=firefox, moz:buildID=20200309095159, javascriptEnabled=true, platformName=mac, setWindowRect=true, moz:webdriverClick=true}]
Session ID: XXXXXXXX-XXXX-XXXX-XXXX-XXXX16986c4b
*** Element info: {Using=id, value=Title}
Command duration or timeout: 0 milliseconds
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
	at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:319)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:365)
	at org.openqa.selenium.By$ById.findElement(By.java:218)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:311)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at com.sun.proxy.$Proxy9.sendKeys(Unknown Source)
	at com.yourcompany.Pages.ContactPage.setFormFieldTitle(ContactPage.java:110)
	at com.yourcompany.Tests.ContactFormTest.setFormFieldValues(ContactFormTest.java:77)
	at com.yourcompany.Tests.ContactFormTest.contactFormTest(ContactFormTest.java:47)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:75)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:830)
Caused by: org.openqa.selenium.WebDriverException: Failed to convert data to an object
Build info: version: '3.4.0', revision: 'unknown', time: 'unknown'
System info: host: 'itako2007.prod.miso', ip: 'fe80:0:0:0:1c26:12dd:b30:768c%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.15.1', java.version: '13.0.1'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Capabilities [{moz:profile=/var/folders/xn/1n40nzm97kgdz3pgw7hwy_1w0000kr/T/rust_mozprofile.La3HgDEdZL1j, rotatable=false, moz:geckodriverVersion=0.24.0, timeouts={implicit=0.0, pageLoad=300000.0, script=30000.0}, pageLoadStrategy=normal, unhandledPromptBehavior=dismiss and notify, strictFileInteractability=false, moz:headless=false, platform=ANY, moz:accessibilityChecks=false, moz:useNonSpecCompliantPointerOrigin=false, acceptInsecureCerts=false, browserVersion=74.0, moz:shutdownTimeout=60000.0, platformVersion=19.0.0, moz:processID=4221.0, browserName=firefox, moz:buildID=20200309095159, javascriptEnabled=true, platformName=mac, setWindowRect=true, moz:webdriverClick=true}]
Session ID: XXXXXXXX-XXXX-XXXX-XXXX-XXXX16986c4b
*** Element info: {Using=id, value=Title}
Build info: version: '3.11.0', revision: 'e59cfb3', time: '2018-03-11T20:26:55.152Z'
System info: host: 'GC02RH2WYG8WPE', ip: '192.168.1.107', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.13.6', java.version: '13.0.2'
Driver info: driver.version: EventFiringWebDriver
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstanceWithCaller(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:150)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:115)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:45)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:164)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:82)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:637)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:410)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:453)
	at org.openqa.selenium.By$ById.findElement(By.java:218)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:402)
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.openqa.selenium.support.events.EventFiringWebDriver$2.invoke(EventFiringWebDriver.java:104)
	at com.sun.proxy.$Proxy5.findElement(Unknown Source)
	at org.openqa.selenium.support.events.EventFiringWebDriver.findElement(EventFiringWebDriver.java:188)
	at org.openqa.selenium.remote.server.handler.FindElement.call(FindElement.java:48)
	at org.openqa.selenium.remote.server.handler.FindElement.call(FindElement.java:33)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at org.openqa.selenium.remote.server.DefaultSession$1.run(DefaultSession.java:176)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- contactFormTest -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.Tests.ContactFormTest@694e1548]" started-at="2020-04-19T19:51:53Z" name="tearDown" finished-at="2020-04-19T19:51:53Z" duration-ms="289" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=contactFormTest status=SUCCESS method=ContactFormTest.contactFormTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.ContactFormTest@694e1548] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.Tests.ContactFormTest@694e1548]" started-at="2020-04-19T19:51:53Z" name="tearDown" finished-at="2020-04-19T19:51:54Z" duration-ms="417" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=contactFormTest status=SUCCESS method=ContactFormTest.contactFormTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.ContactFormTest@694e1548] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.Tests.ContactFormTest@694e1548]" started-at="2020-04-19T19:51:53Z" name="tearDown" finished-at="2020-04-19T19:51:54Z" duration-ms="274" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=contactFormTest status=SUCCESS method=ContactFormTest.contactFormTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.ContactFormTest@694e1548] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.Tests.ContactFormTest@694e1548]" started-at="2020-04-19T19:51:54Z" name="tearDown" finished-at="2020-04-19T19:51:54Z" duration-ms="345" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=contactFormTest status=SUCCESS method=ContactFormTest.contactFormTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.ContactFormTest@694e1548] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.Tests.ContactFormTest@694e1548]" started-at="2020-04-19T19:51:58Z" name="tearDown" finished-at="2020-04-19T19:51:58Z" duration-ms="400" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=contactFormTest status=FAILURE method=ContactFormTest.contactFormTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.ContactFormTest@694e1548] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.Tests.ContactFormTest@694e1548]" started-at="2020-04-19T19:52:01Z" name="tearDown" finished-at="2020-04-19T19:52:02Z" duration-ms="415" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=contactFormTest status=SUCCESS method=ContactFormTest.contactFormTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.ContactFormTest@694e1548] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.Tests.ContactFormTest@694e1548]" started-at="2020-04-19T19:52:03Z" name="tearDown" finished-at="2020-04-19T19:52:04Z" duration-ms="294" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=contactFormTest status=SUCCESS method=ContactFormTest.contactFormTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.ContactFormTest@694e1548] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.Tests.ContactFormTest@694e1548]" started-at="2020-04-19T19:52:04Z" name="tearDown" finished-at="2020-04-19T19:52:04Z" duration-ms="387" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=contactFormTest status=SUCCESS method=ContactFormTest.contactFormTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.ContactFormTest@694e1548] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.Tests.ContactFormTest@694e1548]" started-at="2020-04-19T19:52:08Z" name="tearDown" finished-at="2020-04-19T19:52:08Z" duration-ms="381" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=contactFormTest status=SUCCESS method=ContactFormTest.contactFormTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.ContactFormTest@694e1548] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.Tests.ContactFormTest@694e1548]" started-at="2020-04-19T19:52:12Z" name="tearDown" finished-at="2020-04-19T19:52:13Z" duration-ms="402" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=contactFormTest status=SUCCESS method=ContactFormTest.contactFormTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.ContactFormTest@694e1548] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.yourcompany.Tests.ContactFormTest -->
      <class name="com.yourcompany.Tests.PAOIEndpointTest">
        <test-method signature="verifyPAOIEndpointTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.PAOIEndpointTest@614ddd49]" started-at="2020-04-19T19:51:20Z" name="verifyPAOIEndpointTest" data-provider="hardCodedBrowsers" finished-at="2020-04-19T19:51:33Z" duration-ms="12318" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[MicrosoftEdge]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[latest-1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.Tests.PAOIEndpointTest.verifyPAOIEndpointTest(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.net.MalformedURLException,org.openqa.selenium.InvalidElementStateException,java.rmi.UnexpectedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPAOIEndpointTest -->
        <test-method signature="verifyPAOIEndpointTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.PAOIEndpointTest@614ddd49]" started-at="2020-04-19T19:51:20Z" name="verifyPAOIEndpointTest" data-provider="hardCodedBrowsers" finished-at="2020-04-19T19:51:32Z" duration-ms="11230" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[latest]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.Tests.PAOIEndpointTest.verifyPAOIEndpointTest(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.net.MalformedURLException,org.openqa.selenium.InvalidElementStateException,java.rmi.UnexpectedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPAOIEndpointTest -->
        <test-method signature="verifyPAOIEndpointTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.PAOIEndpointTest@614ddd49]" started-at="2020-04-19T19:51:20Z" name="verifyPAOIEndpointTest" data-provider="hardCodedBrowsers" finished-at="2020-04-19T19:51:32Z" duration-ms="11341" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[latest-1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.Tests.PAOIEndpointTest.verifyPAOIEndpointTest(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.net.MalformedURLException,org.openqa.selenium.InvalidElementStateException,java.rmi.UnexpectedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPAOIEndpointTest -->
        <test-method signature="verifyPAOIEndpointTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.PAOIEndpointTest@614ddd49]" started-at="2020-04-19T19:51:20Z" name="verifyPAOIEndpointTest" data-provider="hardCodedBrowsers" finished-at="2020-04-19T19:51:37Z" duration-ms="16518" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[latest]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[macOS 10.15]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.Tests.PAOIEndpointTest.verifyPAOIEndpointTest(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.net.MalformedURLException,org.openqa.selenium.InvalidElementStateException,java.rmi.UnexpectedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPAOIEndpointTest -->
        <test-method signature="verifyPAOIEndpointTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.PAOIEndpointTest@614ddd49]" started-at="2020-04-19T19:51:20Z" name="verifyPAOIEndpointTest" data-provider="hardCodedBrowsers" finished-at="2020-04-19T19:51:32Z" duration-ms="12020" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[latest-1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[macOS 10.15]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.Tests.PAOIEndpointTest.verifyPAOIEndpointTest(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.net.MalformedURLException,org.openqa.selenium.InvalidElementStateException,java.rmi.UnexpectedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPAOIEndpointTest -->
        <test-method signature="verifyPAOIEndpointTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.PAOIEndpointTest@614ddd49]" started-at="2020-04-19T19:51:20Z" name="verifyPAOIEndpointTest" data-provider="hardCodedBrowsers" finished-at="2020-04-19T19:51:33Z" duration-ms="12251" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[latest]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[macOS 10.15]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.Tests.PAOIEndpointTest.verifyPAOIEndpointTest(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.net.MalformedURLException,org.openqa.selenium.InvalidElementStateException,java.rmi.UnexpectedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPAOIEndpointTest -->
        <test-method signature="verifyPAOIEndpointTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.PAOIEndpointTest@614ddd49]" started-at="2020-04-19T19:51:20Z" name="verifyPAOIEndpointTest" data-provider="hardCodedBrowsers" finished-at="2020-04-19T19:51:32Z" duration-ms="11640" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[MicrosoftEdge]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[latest]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.Tests.PAOIEndpointTest.verifyPAOIEndpointTest(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.net.MalformedURLException,org.openqa.selenium.InvalidElementStateException,java.rmi.UnexpectedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPAOIEndpointTest -->
        <test-method signature="verifyPAOIEndpointTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.PAOIEndpointTest@614ddd49]" started-at="2020-04-19T19:51:20Z" name="verifyPAOIEndpointTest" data-provider="hardCodedBrowsers" finished-at="2020-04-19T19:51:38Z" duration-ms="17945" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[latest]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.Tests.PAOIEndpointTest.verifyPAOIEndpointTest(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.net.MalformedURLException,org.openqa.selenium.InvalidElementStateException,java.rmi.UnexpectedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPAOIEndpointTest -->
        <test-method signature="verifyPAOIEndpointTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.PAOIEndpointTest@614ddd49]" started-at="2020-04-19T19:51:20Z" name="verifyPAOIEndpointTest" data-provider="hardCodedBrowsers" finished-at="2020-04-19T19:51:38Z" duration-ms="17665" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[latest-1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.Tests.PAOIEndpointTest.verifyPAOIEndpointTest(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.net.MalformedURLException,org.openqa.selenium.InvalidElementStateException,java.rmi.UnexpectedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPAOIEndpointTest -->
        <test-method signature="verifyPAOIEndpointTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.PAOIEndpointTest@614ddd49]" started-at="2020-04-19T19:51:20Z" name="verifyPAOIEndpointTest" data-provider="hardCodedBrowsers" finished-at="2020-04-19T19:51:37Z" duration-ms="17091" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[latest-1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[macOS 10.15]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.Tests.PAOIEndpointTest.verifyPAOIEndpointTest(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.net.MalformedURLException,org.openqa.selenium.InvalidElementStateException,java.rmi.UnexpectedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPAOIEndpointTest -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.Tests.PAOIEndpointTest@614ddd49]" started-at="2020-04-19T19:51:32Z" name="tearDown" finished-at="2020-04-19T19:51:32Z" duration-ms="388" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPAOIEndpointTest status=SUCCESS method=PAOIEndpointTest.verifyPAOIEndpointTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.PAOIEndpointTest@614ddd49] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.Tests.PAOIEndpointTest@614ddd49]" started-at="2020-04-19T19:51:32Z" name="tearDown" finished-at="2020-04-19T19:51:32Z" duration-ms="335" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPAOIEndpointTest status=SUCCESS method=PAOIEndpointTest.verifyPAOIEndpointTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.PAOIEndpointTest@614ddd49] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.Tests.PAOIEndpointTest@614ddd49]" started-at="2020-04-19T19:51:32Z" name="tearDown" finished-at="2020-04-19T19:51:32Z" duration-ms="292" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPAOIEndpointTest status=SUCCESS method=PAOIEndpointTest.verifyPAOIEndpointTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.PAOIEndpointTest@614ddd49] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.Tests.PAOIEndpointTest@614ddd49]" started-at="2020-04-19T19:51:32Z" name="tearDown" finished-at="2020-04-19T19:51:33Z" duration-ms="430" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPAOIEndpointTest status=SUCCESS method=PAOIEndpointTest.verifyPAOIEndpointTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.PAOIEndpointTest@614ddd49] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.Tests.PAOIEndpointTest@614ddd49]" started-at="2020-04-19T19:51:33Z" name="tearDown" finished-at="2020-04-19T19:51:33Z" duration-ms="448" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPAOIEndpointTest status=SUCCESS method=PAOIEndpointTest.verifyPAOIEndpointTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.PAOIEndpointTest@614ddd49] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.Tests.PAOIEndpointTest@614ddd49]" started-at="2020-04-19T19:51:33Z" name="tearDown" finished-at="2020-04-19T19:51:33Z" duration-ms="692" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPAOIEndpointTest status=SUCCESS method=PAOIEndpointTest.verifyPAOIEndpointTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.PAOIEndpointTest@614ddd49] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.Tests.PAOIEndpointTest@614ddd49]" started-at="2020-04-19T19:51:37Z" name="tearDown" finished-at="2020-04-19T19:51:37Z" duration-ms="491" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPAOIEndpointTest status=SUCCESS method=PAOIEndpointTest.verifyPAOIEndpointTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.PAOIEndpointTest@614ddd49] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.Tests.PAOIEndpointTest@614ddd49]" started-at="2020-04-19T19:51:37Z" name="tearDown" finished-at="2020-04-19T19:51:38Z" duration-ms="412" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPAOIEndpointTest status=SUCCESS method=PAOIEndpointTest.verifyPAOIEndpointTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.PAOIEndpointTest@614ddd49] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.Tests.PAOIEndpointTest@614ddd49]" started-at="2020-04-19T19:51:38Z" name="tearDown" finished-at="2020-04-19T19:51:38Z" duration-ms="312" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPAOIEndpointTest status=SUCCESS method=PAOIEndpointTest.verifyPAOIEndpointTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.PAOIEndpointTest@614ddd49] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.Tests.PAOIEndpointTest@614ddd49]" started-at="2020-04-19T19:51:38Z" name="tearDown" finished-at="2020-04-19T19:51:39Z" duration-ms="1207" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPAOIEndpointTest status=SUCCESS method=PAOIEndpointTest.verifyPAOIEndpointTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.PAOIEndpointTest@614ddd49] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.yourcompany.Tests.PAOIEndpointTest -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
