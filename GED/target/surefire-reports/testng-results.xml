<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="30" passed="29" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-04-14T12:42:24Z" name="Command line suite" finished-at="2020-04-14T12:43:09Z" duration-ms="44821">
    <groups>
    </groups>
    <test started-at="2020-04-14T12:42:24Z" name="Command line test" finished-at="2020-04-14T12:43:09Z" duration-ms="44821">
      <class name="com.yourcompany.Tests.FollowLinkTest">
        <test-method signature="verifyContactLinkTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.FollowLinkTest@1f554b06]" started-at="2020-04-14T08:42:24Z" name="verifyContactLinkTest" data-provider="hardCodedBrowsers" finished-at="2020-04-14T08:42:50Z" duration-ms="25675" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[latest]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[macOS 10.15]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.Tests.FollowLinkTest.verifyContactLinkTest(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.net.MalformedURLException,org.openqa.selenium.InvalidElementStateException,java.rmi.UnexpectedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyContactLinkTest -->
        <test-method signature="verifyContactLinkTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.FollowLinkTest@1f554b06]" started-at="2020-04-14T08:42:24Z" name="verifyContactLinkTest" data-provider="hardCodedBrowsers" finished-at="2020-04-14T08:42:51Z" duration-ms="26736" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[latest-1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[macOS 10.15]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.Tests.FollowLinkTest.verifyContactLinkTest(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.net.MalformedURLException,org.openqa.selenium.InvalidElementStateException,java.rmi.UnexpectedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyContactLinkTest -->
        <test-method signature="verifyContactLinkTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.FollowLinkTest@1f554b06]" started-at="2020-04-14T08:42:24Z" name="verifyContactLinkTest" data-provider="hardCodedBrowsers" finished-at="2020-04-14T08:42:41Z" duration-ms="16834" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[MicrosoftEdge]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[latest-1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.Tests.FollowLinkTest.verifyContactLinkTest(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.net.MalformedURLException,org.openqa.selenium.InvalidElementStateException,java.rmi.UnexpectedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyContactLinkTest -->
        <test-method signature="verifyContactLinkTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.FollowLinkTest@1f554b06]" started-at="2020-04-14T08:42:24Z" name="verifyContactLinkTest" data-provider="hardCodedBrowsers" finished-at="2020-04-14T08:42:48Z" duration-ms="24086" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[latest-1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[macOS 10.15]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.Tests.FollowLinkTest.verifyContactLinkTest(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.net.MalformedURLException,org.openqa.selenium.InvalidElementStateException,java.rmi.UnexpectedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyContactLinkTest -->
        <test-method signature="verifyContactLinkTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.FollowLinkTest@1f554b06]" started-at="2020-04-14T08:42:24Z" name="verifyContactLinkTest" data-provider="hardCodedBrowsers" finished-at="2020-04-14T08:42:47Z" duration-ms="22563" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[MicrosoftEdge]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[latest]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.Tests.FollowLinkTest.verifyContactLinkTest(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.net.MalformedURLException,org.openqa.selenium.InvalidElementStateException,java.rmi.UnexpectedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyContactLinkTest -->
        <test-method signature="verifyContactLinkTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.FollowLinkTest@1f554b06]" started-at="2020-04-14T08:42:24Z" name="verifyContactLinkTest" data-provider="hardCodedBrowsers" finished-at="2020-04-14T08:42:54Z" duration-ms="30046" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[latest]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.Tests.FollowLinkTest.verifyContactLinkTest(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.net.MalformedURLException,org.openqa.selenium.InvalidElementStateException,java.rmi.UnexpectedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyContactLinkTest -->
        <test-method signature="verifyContactLinkTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.FollowLinkTest@1f554b06]" started-at="2020-04-14T08:42:24Z" name="verifyContactLinkTest" data-provider="hardCodedBrowsers" finished-at="2020-04-14T08:42:45Z" duration-ms="20840" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[latest-1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.Tests.FollowLinkTest.verifyContactLinkTest(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.net.MalformedURLException,org.openqa.selenium.InvalidElementStateException,java.rmi.UnexpectedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyContactLinkTest -->
        <test-method signature="verifyContactLinkTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.FollowLinkTest@1f554b06]" started-at="2020-04-14T08:42:24Z" name="verifyContactLinkTest" data-provider="hardCodedBrowsers" finished-at="2020-04-14T08:42:43Z" duration-ms="18585" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[latest]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.Tests.FollowLinkTest.verifyContactLinkTest(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.net.MalformedURLException,org.openqa.selenium.InvalidElementStateException,java.rmi.UnexpectedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyContactLinkTest -->
        <test-method signature="verifyContactLinkTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.FollowLinkTest@1f554b06]" started-at="2020-04-14T08:42:24Z" name="verifyContactLinkTest" data-provider="hardCodedBrowsers" finished-at="2020-04-14T08:42:55Z" duration-ms="30772" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[latest-1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.Tests.FollowLinkTest.verifyContactLinkTest(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.net.MalformedURLException,org.openqa.selenium.InvalidElementStateException,java.rmi.UnexpectedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyContactLinkTest -->
        <test-method signature="verifyContactLinkTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.FollowLinkTest@1f554b06]" started-at="2020-04-14T08:42:24Z" name="verifyContactLinkTest" data-provider="hardCodedBrowsers" finished-at="2020-04-14T08:42:44Z" duration-ms="19373" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[latest]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[macOS 10.15]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.Tests.FollowLinkTest.verifyContactLinkTest(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.net.MalformedURLException,org.openqa.selenium.InvalidElementStateException,java.rmi.UnexpectedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyContactLinkTest -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.Tests.FollowLinkTest@1f554b06]" started-at="2020-04-14T08:42:41Z" name="tearDown" finished-at="2020-04-14T08:42:42Z" duration-ms="326" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyContactLinkTest status=SUCCESS method=FollowLinkTest.verifyContactLinkTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.FollowLinkTest@1f554b06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.Tests.FollowLinkTest@1f554b06]" started-at="2020-04-14T08:42:43Z" name="tearDown" finished-at="2020-04-14T08:42:43Z" duration-ms="346" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyContactLinkTest status=SUCCESS method=FollowLinkTest.verifyContactLinkTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.FollowLinkTest@1f554b06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.Tests.FollowLinkTest@1f554b06]" started-at="2020-04-14T08:42:44Z" name="tearDown" finished-at="2020-04-14T08:42:44Z" duration-ms="539" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyContactLinkTest status=SUCCESS method=FollowLinkTest.verifyContactLinkTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.FollowLinkTest@1f554b06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.Tests.FollowLinkTest@1f554b06]" started-at="2020-04-14T08:42:45Z" name="tearDown" finished-at="2020-04-14T08:42:47Z" duration-ms="1789" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyContactLinkTest status=SUCCESS method=FollowLinkTest.verifyContactLinkTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.FollowLinkTest@1f554b06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.Tests.FollowLinkTest@1f554b06]" started-at="2020-04-14T08:42:47Z" name="tearDown" finished-at="2020-04-14T08:42:48Z" duration-ms="1268" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyContactLinkTest status=SUCCESS method=FollowLinkTest.verifyContactLinkTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.FollowLinkTest@1f554b06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.Tests.FollowLinkTest@1f554b06]" started-at="2020-04-14T08:42:48Z" name="tearDown" finished-at="2020-04-14T08:42:49Z" duration-ms="613" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyContactLinkTest status=SUCCESS method=FollowLinkTest.verifyContactLinkTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.FollowLinkTest@1f554b06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.Tests.FollowLinkTest@1f554b06]" started-at="2020-04-14T08:42:50Z" name="tearDown" finished-at="2020-04-14T08:42:51Z" duration-ms="648" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyContactLinkTest status=SUCCESS method=FollowLinkTest.verifyContactLinkTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.FollowLinkTest@1f554b06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.Tests.FollowLinkTest@1f554b06]" started-at="2020-04-14T08:42:51Z" name="tearDown" finished-at="2020-04-14T08:42:52Z" duration-ms="813" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyContactLinkTest status=SUCCESS method=FollowLinkTest.verifyContactLinkTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.FollowLinkTest@1f554b06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.Tests.FollowLinkTest@1f554b06]" started-at="2020-04-14T08:42:54Z" name="tearDown" finished-at="2020-04-14T08:42:55Z" duration-ms="596" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyContactLinkTest status=SUCCESS method=FollowLinkTest.verifyContactLinkTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.FollowLinkTest@1f554b06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.Tests.FollowLinkTest@1f554b06]" started-at="2020-04-14T08:42:55Z" name="tearDown" finished-at="2020-04-14T08:42:56Z" duration-ms="1038" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyContactLinkTest status=SUCCESS method=FollowLinkTest.verifyContactLinkTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.FollowLinkTest@1f554b06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.yourcompany.Tests.FollowLinkTest -->
      <class name="com.yourcompany.Tests.ContactFormTest">
        <test-method signature="contactFormTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.ContactFormTest@694e1548]" started-at="2020-04-14T08:42:24Z" name="contactFormTest" data-provider="hardCodedBrowsers" finished-at="2020-04-14T08:42:46Z" duration-ms="21169" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[latest]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.Tests.ContactFormTest.contactFormTest(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.net.MalformedURLException,org.openqa.selenium.InvalidElementStateException,java.rmi.UnexpectedException]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element <button id="_evidon-accept-button" class="evidon-banner-acceptbutton" tabindex="0" style="position: absolute; right: 18px; top: 27%; display: inline-block; border: 0px; background: rgb(85, 182, 110); color: rgb(255, 255, 255); padding: 10px 12px; cursor: pointer; border-radius: 25px; width: auto; margin: 0px auto; font-size: 16px; text-transform: uppercase; font-weight: bold;">...</button> is not clickable at point (943, 585). Other element would receive the click: <iframe id="drift-widget" src="https://js.driftt.com/deploy/assets/index.html" title="Drift Messenger" role="complementary" style="border: none; display: block; height: 100px !important; width: 456px !important; position: fixed; top: auto; left: auto; bottom: 24px; right: 24px; visibility: visible; z-index: 2147483647; max-height: 100vh; max-width: 100%; transition: none 0s ease 0s; background: none transparent; opacity: 1; pointer-events: auto; touch-action: auto;" class="drift-widget-slider" data-gtm-vis-recent-on-screen-2367279_416="5211" data-gtm-vis-first-on-screen-2367279_416="5211" data-gtm-vis-total-visible-time-2367279_416="100" data-gtm-vis-has-fired-2367279_416="1"></iframe>
  (Session info: chrome=81.0.4044.92)
  (Driver info: chromedriver=81.0.4044.69 (6813546031a4bc83f717a2ef7cd4ac6ec1199132-refs/branch-heads/4044@{#776}),platform=Windows NT 10.0.10586 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.11.0', revision: 'e59cfb3', time: '2018-03-11T20:26:55.152Z'
System info: host: 'GC02RH2WYG8WPE', ip: '192.168.1.107', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.13.6', java.version: '13.0.2'
Driver info: org.openqa.selenium.remote.RemoteWebDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 81.0.4044.69 (6813546031a4b..., userDataDir: C:\Users\ADMINI~1\AppData\L...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:49750}, handlesAlerts: true, hasMetadata: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), rotatable: false, setWindowRect: true, strictFileInteractability: false, takesHeapSnapshot: true, takesScreenshot: true, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unexpectedAlertBehaviour: ignore, unhandledPromptBehavior: ignore, version: 81.0.4044.92, webStorageEnabled: true, webauthn:virtualAuthenticators: true, webdriver.remote.sessionid: b019e485095143b5ad60ba4b631...}
Session ID: b019e485095143b5ad60ba4b631c70fe]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element <button id="_evidon-accept-button" class="evidon-banner-acceptbutton" tabindex="0" style="position: absolute; right: 18px; top: 27%; display: inline-block; border: 0px; background: rgb(85, 182, 110); color: rgb(255, 255, 255); padding: 10px 12px; cursor: pointer; border-radius: 25px; width: auto; margin: 0px auto; font-size: 16px; text-transform: uppercase; font-weight: bold;">...</button> is not clickable at point (943, 585). Other element would receive the click: <iframe id="drift-widget" src="https://js.driftt.com/deploy/assets/index.html" title="Drift Messenger" role="complementary" style="border: none; display: block; height: 100px !important; width: 456px !important; position: fixed; top: auto; left: auto; bottom: 24px; right: 24px; visibility: visible; z-index: 2147483647; max-height: 100vh; max-width: 100%; transition: none 0s ease 0s; background: none transparent; opacity: 1; pointer-events: auto; touch-action: auto;" class="drift-widget-slider" data-gtm-vis-recent-on-screen-2367279_416="5211" data-gtm-vis-first-on-screen-2367279_416="5211" data-gtm-vis-total-visible-time-2367279_416="100" data-gtm-vis-has-fired-2367279_416="1"></iframe>
  (Session info: chrome=81.0.4044.92)
  (Driver info: chromedriver=81.0.4044.69 (6813546031a4bc83f717a2ef7cd4ac6ec1199132-refs/branch-heads/4044@{#776}),platform=Windows NT 10.0.10586 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.11.0', revision: 'e59cfb3', time: '2018-03-11T20:26:55.152Z'
System info: host: 'GC02RH2WYG8WPE', ip: '192.168.1.107', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.13.6', java.version: '13.0.2'
Driver info: org.openqa.selenium.remote.RemoteWebDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 81.0.4044.69 (6813546031a4b..., userDataDir: C:\Users\ADMINI~1\AppData\L...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:49750}, handlesAlerts: true, hasMetadata: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), rotatable: false, setWindowRect: true, strictFileInteractability: false, takesHeapSnapshot: true, takesScreenshot: true, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unexpectedAlertBehaviour: ignore, unhandledPromptBehavior: ignore, version: 81.0.4044.92, webStorageEnabled: true, webauthn:virtualAuthenticators: true, webdriver.remote.sessionid: b019e485095143b5ad60ba4b631...}
Session ID: b019e485095143b5ad60ba4b631c70fe
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
	at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
	at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:279)
	at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:83)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
	at com.sun.proxy.$Proxy9.click(Unknown Source)
	at com.yourcompany.Pages.ContactPage.acceptCookies(ContactPage.java:77)
	at com.yourcompany.Tests.ContactFormTest.contactFormTest(ContactFormTest.java:38)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:75)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:830)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- contactFormTest -->
        <test-method signature="contactFormTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.ContactFormTest@694e1548]" started-at="2020-04-14T08:42:24Z" name="contactFormTest" data-provider="hardCodedBrowsers" finished-at="2020-04-14T08:42:56Z" duration-ms="31798" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[MicrosoftEdge]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[latest]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.Tests.ContactFormTest.contactFormTest(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.net.MalformedURLException,org.openqa.selenium.InvalidElementStateException,java.rmi.UnexpectedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- contactFormTest -->
        <test-method signature="contactFormTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.ContactFormTest@694e1548]" started-at="2020-04-14T08:42:24Z" name="contactFormTest" data-provider="hardCodedBrowsers" finished-at="2020-04-14T08:43:07Z" duration-ms="42611" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[latest]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[macOS 10.15]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.Tests.ContactFormTest.contactFormTest(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.net.MalformedURLException,org.openqa.selenium.InvalidElementStateException,java.rmi.UnexpectedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- contactFormTest -->
        <test-method signature="contactFormTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.ContactFormTest@694e1548]" started-at="2020-04-14T08:42:24Z" name="contactFormTest" data-provider="hardCodedBrowsers" finished-at="2020-04-14T08:43:09Z" duration-ms="44312" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[latest-1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[macOS 10.15]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.Tests.ContactFormTest.contactFormTest(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.net.MalformedURLException,org.openqa.selenium.InvalidElementStateException,java.rmi.UnexpectedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- contactFormTest -->
        <test-method signature="contactFormTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.ContactFormTest@694e1548]" started-at="2020-04-14T08:42:24Z" name="contactFormTest" data-provider="hardCodedBrowsers" finished-at="2020-04-14T08:43:07Z" duration-ms="42571" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[latest]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.Tests.ContactFormTest.contactFormTest(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.net.MalformedURLException,org.openqa.selenium.InvalidElementStateException,java.rmi.UnexpectedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- contactFormTest -->
        <test-method signature="contactFormTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.ContactFormTest@694e1548]" started-at="2020-04-14T08:42:24Z" name="contactFormTest" data-provider="hardCodedBrowsers" finished-at="2020-04-14T08:43:03Z" duration-ms="38194" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[latest-1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[macOS 10.15]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.Tests.ContactFormTest.contactFormTest(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.net.MalformedURLException,org.openqa.selenium.InvalidElementStateException,java.rmi.UnexpectedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- contactFormTest -->
        <test-method signature="contactFormTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.ContactFormTest@694e1548]" started-at="2020-04-14T08:42:24Z" name="contactFormTest" data-provider="hardCodedBrowsers" finished-at="2020-04-14T08:43:02Z" duration-ms="37894" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[latest-1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.Tests.ContactFormTest.contactFormTest(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.net.MalformedURLException,org.openqa.selenium.InvalidElementStateException,java.rmi.UnexpectedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- contactFormTest -->
        <test-method signature="contactFormTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.ContactFormTest@694e1548]" started-at="2020-04-14T08:42:24Z" name="contactFormTest" data-provider="hardCodedBrowsers" finished-at="2020-04-14T08:42:59Z" duration-ms="34847" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[MicrosoftEdge]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[latest-1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.Tests.ContactFormTest.contactFormTest(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.net.MalformedURLException,org.openqa.selenium.InvalidElementStateException,java.rmi.UnexpectedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- contactFormTest -->
        <test-method signature="contactFormTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.ContactFormTest@694e1548]" started-at="2020-04-14T08:42:24Z" name="contactFormTest" data-provider="hardCodedBrowsers" finished-at="2020-04-14T08:43:08Z" duration-ms="43203" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[latest-1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.Tests.ContactFormTest.contactFormTest(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.net.MalformedURLException,org.openqa.selenium.InvalidElementStateException,java.rmi.UnexpectedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- contactFormTest -->
        <test-method signature="contactFormTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.ContactFormTest@694e1548]" started-at="2020-04-14T08:42:24Z" name="contactFormTest" data-provider="hardCodedBrowsers" finished-at="2020-04-14T08:43:02Z" duration-ms="37978" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[latest]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[macOS 10.15]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.Tests.ContactFormTest.contactFormTest(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.net.MalformedURLException,org.openqa.selenium.InvalidElementStateException,java.rmi.UnexpectedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- contactFormTest -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.Tests.ContactFormTest@694e1548]" started-at="2020-04-14T08:42:46Z" name="tearDown" finished-at="2020-04-14T08:42:46Z" duration-ms="489" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=contactFormTest status=FAILURE method=ContactFormTest.contactFormTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.ContactFormTest@694e1548] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.Tests.ContactFormTest@694e1548]" started-at="2020-04-14T08:42:56Z" name="tearDown" finished-at="2020-04-14T08:42:56Z" duration-ms="301" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=contactFormTest status=SUCCESS method=ContactFormTest.contactFormTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.ContactFormTest@694e1548] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.Tests.ContactFormTest@694e1548]" started-at="2020-04-14T08:42:59Z" name="tearDown" finished-at="2020-04-14T08:43:00Z" duration-ms="350" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=contactFormTest status=SUCCESS method=ContactFormTest.contactFormTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.ContactFormTest@694e1548] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.Tests.ContactFormTest@694e1548]" started-at="2020-04-14T08:43:02Z" name="tearDown" finished-at="2020-04-14T08:43:03Z" duration-ms="477" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=contactFormTest status=SUCCESS method=ContactFormTest.contactFormTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.ContactFormTest@694e1548] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.Tests.ContactFormTest@694e1548]" started-at="2020-04-14T08:43:02Z" name="tearDown" finished-at="2020-04-14T08:43:03Z" duration-ms="483" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=contactFormTest status=SUCCESS method=ContactFormTest.contactFormTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.ContactFormTest@694e1548] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.Tests.ContactFormTest@694e1548]" started-at="2020-04-14T08:43:03Z" name="tearDown" finished-at="2020-04-14T08:43:03Z" duration-ms="509" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=contactFormTest status=SUCCESS method=ContactFormTest.contactFormTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.ContactFormTest@694e1548] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.Tests.ContactFormTest@694e1548]" started-at="2020-04-14T08:43:07Z" name="tearDown" finished-at="2020-04-14T08:43:07Z" duration-ms="368" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=contactFormTest status=SUCCESS method=ContactFormTest.contactFormTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.ContactFormTest@694e1548] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.Tests.ContactFormTest@694e1548]" started-at="2020-04-14T08:43:07Z" name="tearDown" finished-at="2020-04-14T08:43:07Z" duration-ms="428" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=contactFormTest status=SUCCESS method=ContactFormTest.contactFormTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.ContactFormTest@694e1548] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.Tests.ContactFormTest@694e1548]" started-at="2020-04-14T08:43:08Z" name="tearDown" finished-at="2020-04-14T08:43:08Z" duration-ms="399" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=contactFormTest status=SUCCESS method=ContactFormTest.contactFormTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.ContactFormTest@694e1548] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.Tests.ContactFormTest@694e1548]" started-at="2020-04-14T08:43:09Z" name="tearDown" finished-at="2020-04-14T08:43:09Z" duration-ms="461" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=contactFormTest status=SUCCESS method=ContactFormTest.contactFormTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.ContactFormTest@694e1548] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.yourcompany.Tests.ContactFormTest -->
      <class name="com.yourcompany.Tests.PAOIEndpointTest">
        <test-method signature="verifyPAOIEndpointTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.PAOIEndpointTest@614ddd49]" started-at="2020-04-14T08:42:24Z" name="verifyPAOIEndpointTest" data-provider="hardCodedBrowsers" finished-at="2020-04-14T08:42:41Z" duration-ms="16452" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[latest]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[macOS 10.15]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.Tests.PAOIEndpointTest.verifyPAOIEndpointTest(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.net.MalformedURLException,org.openqa.selenium.InvalidElementStateException,java.rmi.UnexpectedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPAOIEndpointTest -->
        <test-method signature="verifyPAOIEndpointTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.PAOIEndpointTest@614ddd49]" started-at="2020-04-14T08:42:24Z" name="verifyPAOIEndpointTest" data-provider="hardCodedBrowsers" finished-at="2020-04-14T08:42:47Z" duration-ms="22700" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[latest]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.Tests.PAOIEndpointTest.verifyPAOIEndpointTest(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.net.MalformedURLException,org.openqa.selenium.InvalidElementStateException,java.rmi.UnexpectedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPAOIEndpointTest -->
        <test-method signature="verifyPAOIEndpointTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.PAOIEndpointTest@614ddd49]" started-at="2020-04-14T08:42:24Z" name="verifyPAOIEndpointTest" data-provider="hardCodedBrowsers" finished-at="2020-04-14T08:42:38Z" duration-ms="13511" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[latest-1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[macOS 10.15]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.Tests.PAOIEndpointTest.verifyPAOIEndpointTest(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.net.MalformedURLException,org.openqa.selenium.InvalidElementStateException,java.rmi.UnexpectedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPAOIEndpointTest -->
        <test-method signature="verifyPAOIEndpointTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.PAOIEndpointTest@614ddd49]" started-at="2020-04-14T08:42:24Z" name="verifyPAOIEndpointTest" data-provider="hardCodedBrowsers" finished-at="2020-04-14T08:42:38Z" duration-ms="13223" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[MicrosoftEdge]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[latest-1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.Tests.PAOIEndpointTest.verifyPAOIEndpointTest(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.net.MalformedURLException,org.openqa.selenium.InvalidElementStateException,java.rmi.UnexpectedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPAOIEndpointTest -->
        <test-method signature="verifyPAOIEndpointTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.PAOIEndpointTest@614ddd49]" started-at="2020-04-14T08:42:24Z" name="verifyPAOIEndpointTest" data-provider="hardCodedBrowsers" finished-at="2020-04-14T08:42:37Z" duration-ms="12881" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[latest-1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.Tests.PAOIEndpointTest.verifyPAOIEndpointTest(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.net.MalformedURLException,org.openqa.selenium.InvalidElementStateException,java.rmi.UnexpectedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPAOIEndpointTest -->
        <test-method signature="verifyPAOIEndpointTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.PAOIEndpointTest@614ddd49]" started-at="2020-04-14T08:42:24Z" name="verifyPAOIEndpointTest" data-provider="hardCodedBrowsers" finished-at="2020-04-14T08:42:37Z" duration-ms="12886" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[latest]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[macOS 10.15]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.Tests.PAOIEndpointTest.verifyPAOIEndpointTest(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.net.MalformedURLException,org.openqa.selenium.InvalidElementStateException,java.rmi.UnexpectedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPAOIEndpointTest -->
        <test-method signature="verifyPAOIEndpointTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.PAOIEndpointTest@614ddd49]" started-at="2020-04-14T08:42:24Z" name="verifyPAOIEndpointTest" data-provider="hardCodedBrowsers" finished-at="2020-04-14T08:42:36Z" duration-ms="11936" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[latest]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.Tests.PAOIEndpointTest.verifyPAOIEndpointTest(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.net.MalformedURLException,org.openqa.selenium.InvalidElementStateException,java.rmi.UnexpectedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPAOIEndpointTest -->
        <test-method signature="verifyPAOIEndpointTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.PAOIEndpointTest@614ddd49]" started-at="2020-04-14T08:42:24Z" name="verifyPAOIEndpointTest" data-provider="hardCodedBrowsers" finished-at="2020-04-14T08:42:38Z" duration-ms="13173" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[MicrosoftEdge]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[latest]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.Tests.PAOIEndpointTest.verifyPAOIEndpointTest(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.net.MalformedURLException,org.openqa.selenium.InvalidElementStateException,java.rmi.UnexpectedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPAOIEndpointTest -->
        <test-method signature="verifyPAOIEndpointTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.PAOIEndpointTest@614ddd49]" started-at="2020-04-14T08:42:24Z" name="verifyPAOIEndpointTest" data-provider="hardCodedBrowsers" finished-at="2020-04-14T08:42:47Z" duration-ms="22940" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[latest-1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.Tests.PAOIEndpointTest.verifyPAOIEndpointTest(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.net.MalformedURLException,org.openqa.selenium.InvalidElementStateException,java.rmi.UnexpectedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPAOIEndpointTest -->
        <test-method signature="verifyPAOIEndpointTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.PAOIEndpointTest@614ddd49]" started-at="2020-04-14T08:42:24Z" name="verifyPAOIEndpointTest" data-provider="hardCodedBrowsers" finished-at="2020-04-14T08:42:43Z" duration-ms="19109" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[latest-1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[macOS 10.15]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.Tests.PAOIEndpointTest.verifyPAOIEndpointTest(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.net.MalformedURLException,org.openqa.selenium.InvalidElementStateException,java.rmi.UnexpectedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPAOIEndpointTest -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.Tests.PAOIEndpointTest@614ddd49]" started-at="2020-04-14T08:42:36Z" name="tearDown" finished-at="2020-04-14T08:42:37Z" duration-ms="391" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPAOIEndpointTest status=SUCCESS method=PAOIEndpointTest.verifyPAOIEndpointTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.PAOIEndpointTest@614ddd49] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.Tests.PAOIEndpointTest@614ddd49]" started-at="2020-04-14T08:42:37Z" name="tearDown" finished-at="2020-04-14T08:42:38Z" duration-ms="545" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPAOIEndpointTest status=SUCCESS method=PAOIEndpointTest.verifyPAOIEndpointTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.PAOIEndpointTest@614ddd49] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.Tests.PAOIEndpointTest@614ddd49]" started-at="2020-04-14T08:42:37Z" name="tearDown" finished-at="2020-04-14T08:42:38Z" duration-ms="1049" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPAOIEndpointTest status=SUCCESS method=PAOIEndpointTest.verifyPAOIEndpointTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.PAOIEndpointTest@614ddd49] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.Tests.PAOIEndpointTest@614ddd49]" started-at="2020-04-14T08:42:38Z" name="tearDown" finished-at="2020-04-14T08:42:39Z" duration-ms="1774" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPAOIEndpointTest status=SUCCESS method=PAOIEndpointTest.verifyPAOIEndpointTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.PAOIEndpointTest@614ddd49] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.Tests.PAOIEndpointTest@614ddd49]" started-at="2020-04-14T08:42:38Z" name="tearDown" finished-at="2020-04-14T08:42:38Z" duration-ms="497" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPAOIEndpointTest status=SUCCESS method=PAOIEndpointTest.verifyPAOIEndpointTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.PAOIEndpointTest@614ddd49] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.Tests.PAOIEndpointTest@614ddd49]" started-at="2020-04-14T08:42:38Z" name="tearDown" finished-at="2020-04-14T08:42:38Z" duration-ms="449" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPAOIEndpointTest status=SUCCESS method=PAOIEndpointTest.verifyPAOIEndpointTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.PAOIEndpointTest@614ddd49] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.Tests.PAOIEndpointTest@614ddd49]" started-at="2020-04-14T08:42:41Z" name="tearDown" finished-at="2020-04-14T08:42:41Z" duration-ms="456" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPAOIEndpointTest status=SUCCESS method=PAOIEndpointTest.verifyPAOIEndpointTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.PAOIEndpointTest@614ddd49] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.Tests.PAOIEndpointTest@614ddd49]" started-at="2020-04-14T08:42:43Z" name="tearDown" finished-at="2020-04-14T08:42:44Z" duration-ms="531" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPAOIEndpointTest status=SUCCESS method=PAOIEndpointTest.verifyPAOIEndpointTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.PAOIEndpointTest@614ddd49] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.Tests.PAOIEndpointTest@614ddd49]" started-at="2020-04-14T08:42:47Z" name="tearDown" finished-at="2020-04-14T08:42:47Z" duration-ms="426" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPAOIEndpointTest status=SUCCESS method=PAOIEndpointTest.verifyPAOIEndpointTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.PAOIEndpointTest@614ddd49] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.Tests.PAOIEndpointTest@614ddd49]" started-at="2020-04-14T08:42:47Z" name="tearDown" finished-at="2020-04-14T08:42:48Z" duration-ms="1004" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPAOIEndpointTest status=SUCCESS method=PAOIEndpointTest.verifyPAOIEndpointTest(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.Tests.PAOIEndpointTest@614ddd49] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.yourcompany.Tests.PAOIEndpointTest -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
